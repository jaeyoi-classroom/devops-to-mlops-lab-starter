name: KOSPI 지수 예측 데모 배포 (Model-as-Service)

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/deploy-kospi-prediction.yml"
      - "kospi-prediction/3-continuous-training/**"

env:
  REGISTRY: ghcr.io
  NAMESPACE: kospi-prediction
  STAGE: 3-continuous-training

jobs:
  build:
    runs-on: self-hosted # Self hosted Runner에서 실행
    strategy:
      matrix:
        layer: [app, model]

    steps:
      - name: 저장소 받아오기
        uses: actions/checkout@v4

      - name: Docker Buildx 설치
        uses: docker/setup-buildx-action@v3

      - name: GitHub 컨테이너 레지스트리에 로그인
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 빌드해서 레지스트리에 전송
        uses: docker/build-push-action@v6
        with:
          context: ./${{ env.NAMESPACE }}/${{ env.STAGE }}/src/${{ matrix.layer }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository }}-${{ env.NAMESPACE }}-${{ env.STAGE }}-${{ matrix.layer }}:${{ github.ref_name }}-${{ github.sha }}
            ${{ env.REGISTRY }}/${{ github.repository }}-${{ env.NAMESPACE }}-${{ env.STAGE }}-${{ matrix.layer }}:latest

  deploy:
    needs: build
    runs-on: self-hosted # Self hosted Runner에서 실행

    steps:
      - name: 저장소 받아오기
        uses: actions/checkout@v4

      # setup-terraform을 self hosted runner에서 실행할 때 필요
      - name: nodejs 설치
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Terraform 설치
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform Init
        id: init
        working-directory: ./${{ env.NAMESPACE }}/${{ env.STAGE }}/terraform # terraform 폴더 아래 tf 읽어드리기 위해 경로 지정
        run: terraform init

      - name: Terraform Apply
        working-directory: ./${{ env.NAMESPACE }}/${{ env.STAGE }}/terraform # terraform 폴더 아래 tf 읽어드리기 위해 경로 지정
        env: # TF_VAR_로 시작하는 환경 변수를 만들면 tf 파일 내부에서 variable로 값을 이용할 수 있음
          TF_VAR_github_username: ${{ github.actor }}
          TF_VAR_github_token: ${{ secrets.GITHUB_TOKEN }}
          TF_VAR_ghcr_app_image: ${{ env.REGISTRY }}/${{ github.repository }}-${{ env.NAMESPACE }}-${{ env.STAGE }}-app:${{ github.ref_name }}-${{ github.sha }}
          TF_VAR_ghcr_model_image: ${{ env.REGISTRY }}/${{ github.repository }}-${{ env.NAMESPACE }}-${{ env.STAGE }}-model:${{ github.ref_name }}-${{ github.sha }}
          TF_VAR_namespace: ${{ env.NAMESPACE }}
          TF_VAR_model_api_url: ${{ vars.MODEL_API_URL }}
        run: |
          terraform apply -auto-approve
